@startuml

title US017

/'
As Product Owner, I want the system to have a type of sensor that gives the
status of a binary switch (ON/OFF).
'/

interface Sensor {
    + getId() : int
    + generateId(int) : int
    + getType() : SensorType
    + getValue() : Value
}

class SensorOfOnOff {
    - id : int
    + SensorOfOnOff()
    + getId() : int
    + generateId(int) : int
    + getType() : SensorType
    + getValue() : Value
}

interface Value {
    + valueToString() : String
}

class OnOffValue {
    - onOffValue : boolean
    + OnOffValue(boolean)
    + valueToString() : String
}

enum SensorType {
    - sensorType : String
    - measureUnit : String
    + SensorType(...)
    + getSensorType() : String
}

Sensor <|.. SensorOfOnOff : " implements       "
Value <|.. OnOffValue : " implements"
SensorOfOnOff "1  " *-- "1    " OnOffValue :  "  has"
SensorOfOnOff "1  " o-- "1  " SensorType :  "  has"

@enduml