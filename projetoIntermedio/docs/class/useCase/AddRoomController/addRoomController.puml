@startuml
class AddRoomController {
  - house : House
  + AddRoomController(...)
  + addNewRoomToHouse(...) : RoomDTO
}

class MapperToRoomDTO {
  + MapperToRoomDTO()
  + roomToDTO(...) : RoomDTO
}

class RoomFactoryImp {
  + RoomFactoryImp()
  + createRoom(...) : Room
}

class DimensionFactoryImp {
  + DimensionFactoryImp()
  + createDimensions(...) : Dimensions
}

interface RoomFactory {
  + createRoom(...) : Room
}
interface DimensionFactory {
  + createDimensions(...) : Dimensions
}
interface DeviceFactory {
}

class DeviceFactoryImp {
  + DeviceFactoryImp(...)
}


class House {
  + House(...)
  + addRoom(...) : boolean
}

class Room {
  - name : String
  - floor : int
  + Room(...)
  + getName() : String
  + getFloor() : int
  + getDimensions() : Dimensions
}

class Dimensions {
  - width : double
  - length : double
  - height : double

  + Dimensions(...)
  + getWidth() : double
  + getLength() : double
  + getHeight() : double
}

class RoomDTO {
  - name : String
  - floor : int
  - width : double
  - length : double
  - height : double

  + RoomDTO(...)
  + getName() : String
  + getFloor() : int
  + getWidth() : double
  + getLength() : double
  + getHeight() : double
}

AddRoomController "1" .left.> "1" MapperToRoomDTO : uses
MapperToRoomDTO "1" --> "1  " RoomDTO : create
MapperToRoomDTO "1" ..> "1" Room : uses
RoomFactory "1" <.. "1" RoomFactoryImp : implements
Room "1" *-- "1" Dimensions : contains
Room "1" *-- "1" DeviceFactory: contains
RoomFactoryImp "1" --> "1" Room : creates

House "1" *--"1 List<Room>" Room : contains
AddRoomController "1" .right.> "1" House : uses
AddRoomController "1" ..> "1" RoomDTO : uses
Room "1".left.>"1" DimensionFactory : uses
DimensionFactory "1" <.. "1" DimensionFactoryImp : implements
DimensionFactoryImp "1" --> "1" Dimensions : creates
House "1"..>"1" RoomFactory : uses
DeviceFactory "1" <.right. "1" DeviceFactoryImp : implements


@enduml
