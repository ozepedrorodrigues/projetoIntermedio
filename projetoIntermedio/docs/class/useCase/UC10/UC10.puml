@startuml
interface Sensor {
    + getType() : SensorType
    + getValue() : Value
    + getId() : int
    + setId(...): int
}

class SensorOfTemperature {
    - id : int
    - type : SensorType
    - value : TemperatureValue

   + SensorOfTemperature(...)
   + getId() : int
   + setId(int newId) : int
   + getType() : SensorType
   + getValue() : Value
   - validValueFactory() : boolean
}

class TemperatureValue {
   - temperatureValue : double

   + TemperatureValue()
   + getTemperatureValue() : double
   + toValue() : String
}

interface Value {
   + toValue() : String
}

interface ValueFactory {
   + createTemperatureValue() : Value
}

class ValueFactoryImp {
    + ValueFactoryImp()
    + createTemperatureValue() : Value
}

SensorOfTemperature ..|> Sensor : implements
SensorOfTemperature "1" *-- "1" TemperatureValue : has
TemperatureValue --|> Value : implements
ValueFactoryImp ..|> ValueFactory : implements
ValueFactoryImp ..> TemperatureValue : creates
SensorOfTemperature ..> ValueFactoryImp : uses

@enduml
