@startuml
interface Sensor {
    + getType() : SensorType
    + getValue() : Value
    + getId() : int
    + setId(...): int
}

class SensorOfHumidity {
    - id : int
    - type : SensorType
    - value : HumidityValue

   + SensorOfHumidity(...)
   + getId() : int
   + setId(...) : int
   + getType() : SensorType
   + getValue() : Value
   - validValueFactory() : boolean
}

class HumidityValue {
   - humidityValue : double

   + HumidityValue()
   + getHumidityValue() : double
   + toValue() : String
}

interface Value {
   + toValue() : String
}

interface ValueFactory {
   + createHumidityValue() : Value
}

class ValueFactoryImp {
    + ValueFactoryImp()
    + createHumidityValue() : Value
}

SensorOfHumidity ..|> Sensor : implements
SensorOfHumidity"1" *-- "1" HumidityValue : has
HumidityValue --|> Value : implements
ValueFactoryImp ..|> ValueFactory : implements
ValueFactoryImp ..> HumidityValue : creates
SensorOfHumidity ..> ValueFactoryImp : uses

@enduml
