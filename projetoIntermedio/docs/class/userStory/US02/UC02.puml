@startuml
class AddRoomController {
  - house : House
  - mapperToRoomDTO : MapperToRoomDTO
  + AddRoomController(...)
  + addNewRoomToHouse(...) : RoomDTO
}

class MapperToRoomDTO {
  + MapperToRoomDTO()
  + roomToDTO(...) : RoomDTO
}

class RoomFactoryImp {
  + RoomFactoryImp(...)
  + createRoom(...) : Room
}

class DimensionFactoryImp {
  + DimensionFactoryImp()
  + createDimensions(...) : Dimensions
}

interface RoomFactory {
  + createRoom(...) : Room
}
interface DimensionFactory {
  + createDimensions(...) : Dimensions
}
interface DeviceFactory {
}

class DeviceFactoryImp {
  + DeviceFactoryImp(...)
}


class House {
  + House(...)
  + addRoom(...) : boolean
}

class Room {
  - name : String
  - floor : int
  + Room(...)
  + getName() : String
  + getFloor() : int
  + getDimensions() : Dimensions
}

class Dimensions {
  - width : double
  - length : double
  - height : double

  + Dimensions(...)
  + getWidth() : double
  + getLength() : double
  + getHeight() : double
}

class RoomDTO {
  - name : String
  - floor : int
  - width : double
  - length : double
  - height : double

  + RoomDTO(...)
  + getName() : String
  + getFloor() : int
  + getWidth() : double
  + getLength() : double
  + getHeight() : double
}

AddRoomController .down.> MapperToRoomDTO : uses
AddRoomController "1" *-down- "1" MapperToRoomDTO : contains
AddRoomController ..> RoomDTO : uses
AddRoomController .right.> House : uses
AddRoomController "1" *-right- "1" House : contains
MapperToRoomDTO .left.> RoomDTO : create
MapperToRoomDTO .down.> Room : uses
RoomFactory <|.. RoomFactoryImp : implements
RoomFactoryImp ..> Room : creates
House "1" *--"*" Room : contains
House .right.> RoomFactory : uses
Room "1" *-- "1" Dimensions : contains
Room "1" *-right- "1" DeviceFactory: contains
Room "1" *-- "1" DimensionFactory : contains
Room .left.> DimensionFactory : uses
DimensionFactory <|.. DimensionFactoryImp : implements
DimensionFactoryImp .right.> Dimensions : creates
DeviceFactory <|.down. DeviceFactoryImp : implements



@enduml
