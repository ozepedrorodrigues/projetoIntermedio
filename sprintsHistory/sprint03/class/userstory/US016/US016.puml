@startuml

title US016

/'As Product Owner, I want the system to have a type of actuator that sets a
decimal value in the range defined by [lower limit, upper limit] and predefined
precision.'/

interface Actuator {
    + getId(): int
    + generateId(int): int
    + getType(): ActuatorType
    + operate(Value): Value
}

class ActuatorOfDecimalLimiter {
    - id: int
    - lowerLimit: Double
    - upperLimit: Double
    - precision: Integer
    + ActuatorOfDecimalLimiter()
    + setLimits(...) : boolean
    + setPrecision() : boolean
    + getType(): ActuatorType
    + getId(): int
    + generateId(int): int
    + operate(Value): Value
}

class ValueDouble {
    - value: double
    + ValueDouble(double)
    + valueToString(): String
}

enum ActuatorType {
    - name: String
    + ActuatorType(...)
}

ActuatorOfDecimalLimiter"*" ..|>"1" Actuator : " implements"
ActuatorOfDecimalLimiter"1" o-- "1" ActuatorType : "contains"
ActuatorOfDecimalLimiter .right.> ValueDouble : "uses"

@enduml